@model NewsPortal.ViewModels.CommentViewModel

@*<script defer>
    document.addEventListener('DOMContentLoaded', function () {
        let id = @Model.Id;

        @*$.ajax({
            url: `@Url.Action("GetComments", ViewContext.RouteData.Values["controller"].ToString())`,
            type: "GET",
            data: { id, timeZone: new Date().getTimezoneOffset() / -60 }
        }).done(function (partialViewResult) {
            $(".success").prepend(partialViewResult);
            }); 

        $(submit).click(() => {
            let author = inputName.value;
            let text = textAreaComment.value;
            let error = false;

            if (author.length < 1) {
                error = true;
                if (document.querySelector("#nameError") == null) {
                    let nameError = document.createElement('span');
                    nameError.innerHTML = "* Enter your name";
                    nameError.classList.add('commentError');
                    nameError.id = 'nameError';
                    divName.append(nameError);
                }
            }
            else {
                if (document.querySelector("#nameError") != null)
                    nameError.remove();
            }
            if (text.length < 1) {
                error = true;
                if (document.querySelector("#textError") == null) {
                    let textError = document.createElement('span');
                    textError.innerHTML = "* Enter comment";
                    textError.classList.add('commentError');
                    textError.id = 'textError';
                    divText.append(textError);
                }
            }
            else {
                if (document.querySelector("#textError") != null)
                    textError.remove();
            }
            if (!error) {
                $.ajax({
                    url: `@Url.Action("AddComment", "News")`,
                    type: "GET",
                    data: { author, text, id, timeZone: new Date().getTimezoneOffset()/-60 }
                }).done(function (partialViewResult) {
                    $(".success").prepend(partialViewResult);
                    $(".input-clear").val('');
                });
            }
        })
    })
</script>*@

@*<div class="row">
    <form class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="form-group text-center" id="divName">
            <label for="inputName">Name:</label>
            <input type="text" class="form-control center-block input-clear" id="inputName">
        </div>
        <div class="form-group text-center" id="divText">
            <label for="textAreaComment">Comment:</label>
            <textarea class="form-control center-block input-clear" id="textAreaComment" rows="3"></textarea>
        </div>
        <button id="submit" type="button" class="btn btn-primary center-block">Submit</button>
    </form>
</div>*@

<div class="row">
    @using (Html.BeginForm("AddComment", "Comment", new { id = ViewContext.RouteData.Values["id"].ToString(), 
        timeZone = TimeZoneInfo.Local.GetUtcOffset(DateTime.UtcNow).TotalMinutes / 60, controllerName = ViewContext.RouteData.Values["controller"].ToString()},  
        FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group text-center">
            @Html.LabelFor(model => model.Author)
            @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control center-block", required="required" } })
            @Html.ValidationMessageFor(model => model.Author, "", htmlAttributes: new { @class = "text-danger" })
        </div>
        <div class="form-group text-center">
            @Html.LabelFor(model => model.Text)
            @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control center-block", required="required" } })
            @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
        </div>
        <input type="submit" value="@Resources.Resource.CommentOn" class="btn btn-primary center-block" />
    }
</div>