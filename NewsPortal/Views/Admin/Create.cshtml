@model NewsPortal.ViewModels.NewsViewModel

@{
    ViewBag.Title = "Create";
}

<h2>@Resources.Resource.Create</h2>

<script src="//cdn.tinymce.com/4/tinymce.min.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script type="text/javascript">
    tinyMCE.init({
        mode: "specific_textareas",
        editor_selector: "editorHtml",
    });
</script>
<script>
    CKEDITOR.on('instanceReady', function () {
        $.each(CKEDITOR.instances, function (instance) {
            CKEDITOR.instances[instance].on("change",
                function (e) {
                    for (instance in CKEDITOR.instances
                    )
                        CKEDITOR.instances[instance].updateElement();
                });
        });
    });
</script>
<!--<script type="text/javascript" language="javascript">

    $(document).ready(function () {
        $('#submitButton').ckeditor();
    });

    function UpdateContent() {
        var ckeditorinstance = $('#submitButton').ckeditorGet();
        ckeditorinstance.updateElement();
    }


        $(document).ready(function () {
        $('#submitButton').ckeditor();
    });

    function UpdateContent() {
        var ckeditorinstance = $('#submitButton').ckeditorGet();
        ckeditorinstance.updateElement();
    }

    $('#submitButton').click(UpdateContent);
</script>-->
<script src="~/Scripts/ckeditor/ckeditor.js"></script>


@using (Html.BeginForm("Create", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>News</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @id = "editorHtml" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="editor-field col-md-10">
                <input type="file" name="newsImg" accept=".png, .jpg, .jpeg" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublicationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublicationDate, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.PublicationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Visibility, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.Visibility, new { htmlAttributes = new { @class = "form-control checkbox", @checked = true } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Resources.Resource.Create" class="btn btn-default" id="submitButton" />
                @Html.ActionLink("Cancel", "Index", @ViewContext.RouteData.Values["controller"].ToString(), new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
}



<!--<script>
    $('#submitButton').click(function () {
        tinyMCE.triggerSave();
    });
</script>-->

<script>
    CKEDITOR.on('instanceReady', function () {
        $.each(CKEDITOR.instances, function (instance) {
            CKEDITOR.instances[instance].on("change",
                function (e) {
                    for (instance in CKEDITOR.instances
                    )
                        CKEDITOR.instances[instance].updateElement();
                });
        });
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function (event) {
        var editor = CKEDITOR.replace('editorHtml');
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
